#! /usr/bin/env python
"""Count kmers in an input FASTQ file."""
import sys

from ruffus import *

from staphopia.helpers.time_job import time_job
from staphopia.tasks import kmer

parser = cmdline.get_argparse(description='Count kmers in a FASTQ file.')
parser.add_argument("-f", "--fastq", dest="fastq", help="Input FASTQ file",
                    required=True)
parser.add_argument('-p', '--processors', metavar="INT", type=int, default=1,
                    help='Number of processors to use. (Default 1)')
parser.add_argument('--log_times', action='store_true', default=False,
                    help='Write task run times to file (Default: STDERR).', )
options = parser.parse_args()

TIME_LOG = sys.stderr
if options.log_times:
    TIME_LOG = 'logs/time/kmer_analysis.txt'
# Pipeline --------------------------------------------------------------------

@mkdir('logs/time')
@mkdir('analyses/kmer')
@transform(options.fastq,
           regex(r"(.*).cleanup.fastq.gz"),
           r"analyses/kmer/\1.jf")
@time_job(TIME_LOG, new_stream=True)
def count(fastq, jellyfish):
    """Count kmers using Jellyfish."""
    kmer.jellyfish_count(fastq, jellyfish, str(options.processors))

# -----------------------------------------------------------------------------
pipeline_run(exceptions_terminate_immediately=True, verbose=5)
