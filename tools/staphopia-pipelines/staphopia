#! /usr/bin/env python
"""
A wrapper for Staphopia's analysis pipeline.

usage: staphopia [-h] [-f2 FASTQ2] [-o OUTDIR] [--coverage INT]
                 [--no_length_filter] [-p INT] [--sample_tag SAMPLE_TAG]
                 [--log_times]
                 fastq

Example Usage: staphopia INPUT_R1.fastq.gz -f2 INPUT_R2.fastq.gz -p 12
"""
import os
import sys


def get_fastq_path(fastq):
    if os.path.isfile(fastq):
        if fastq.startswith('/'):
            return fastq
        else:
            return '{0}/{1}'.format(os.getcwd(), fastq)
    elif os.path.isfile('{0}/{1}'.format(os.getcwd(), fastq)):
        return '{0}/{1}'.format(os.getcwd(), fastq)
    else:
        print("{0} missing or not found, please check path.".format(fastq))
        sys.exit(1)

if __name__ == '__main__':
    import argparse as ap
    from staphopia.tasks.shared import run_command

    parser = ap.ArgumentParser(
        prog='staphopia',
        conflict_handler='resolve',
        description="A wrapper for Staphopia's analysis pipeline."
    )

    parser.add_argument("fastq", help="Input file")
    parser.add_argument("-f2", "--fastq2", dest="fastq2", default='',
                        help="Optional paired end compressed FASTQ file",)
    parser.add_argument("-o", "--outdir", dest="outdir", default='./',
                        help="Output directory to use (Default: ./)",)
    parser.add_argument('--coverage', metavar="INT", type=int, default=100,
                        help='Coverage to subsample to.')
    parser.add_argument(
        '--no_length_filter', action='store_true', default=False,
        help='Do not filter based on read lengths (MiSeq Data).'
    )
    parser.add_argument(
        '-p', '--processors', metavar="INT", type=int, default=1,
        help='Number of processors to use. (Default 1)'
    )
    parser.add_argument(
        '--sample_tag', dest='sample_tag', default='sample_tag',
        help='Optional: Sample tag of input. (Default sample_tag)'
    )
    parser.add_argument('--log_times', action='store_true', default=False,
                        help='Write task run times to file (Default: STDERR).')

    if len(sys.argv) == 1:
        parser.print_usage()
        sys.exit(1)

    args = parser.parse_args()

    cwd = os.getcwd()
    FQ1 = get_fastq_path(args.fastq)
    FQ2 = get_fastq_path(args.fastq2) if args.fastq2 else ''
    if not args.outdir == "./":
        run_command(["mkdir", "-p", args.outdir])
        os.chdir(args.outdir)

    # Run Staphopia Pipeline
    run_command(
        [
            'staphopia-job',
            FQ1,
            '--fastq2' if FQ2 else '',
            FQ2 if FQ2 else '',
            '--sample_tag', args.sample_tag,
            '--coverage', str(args.coverage),
            '-p', str(args.processors),
            '--no_length_filter' if args.no_length_filter else '',
            '--log_times' if args.log_times else ''
        ],
        stdout='staphopia-log.txt',
        stderr='staphopia-error.txt'
    )
