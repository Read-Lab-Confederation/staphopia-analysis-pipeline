#! /usr/bin/env python
""" Process ENA experiments. """
if __name__ == '__main__':
    import os
    import sys
    import argparse as ap

    from staphopia.config import PIPELINE_PATH
    from staphopia.tasks import shared

    parser = ap.ArgumentParser(
        prog='process_ena',
        conflict_handler='resolve',
        description=('')
    )
    group1 = parser.add_argument_group('Options', '')
    group1.add_argument('--ena_queue', metavar="STRING", type=str,
                        required=True,
                        help='List of files to process.')

    group3 = parser.add_argument_group('Optional', '')
    group3.add_argument('-h', '--help', action='help',
                        help='Show this help message and exit')

    if len(sys.argv) == 1:
        parser.print_usage()
        sys.exit(1)

    args = parser.parse_args()

    fh = open(args.ena_queue, 'r')
    for file in fh:
        filename = file.rstrip()
        basename = os.path.basename(filename).split('.')[0]
        job_script = '/staphopia/ebs/logs/{0}.sh'.format(basename)

        stdout, stderr = shared.run_command(
            ['python', PIPELINE_PATH + '/create_s3_job_script',
             '--working_dir', '/mnt/' + basename, '--processors', '4',
             '--sample_tag', basename, '--log_times', '--s3_file', filename,
             '--s3_file_bucket', 'staphopia', '--s3_bucket',
             'staphopia-samples', '--s3_bucket_path', 'ena'],
            stdout=job_script,
            verbose=False
        )

        if os.path.exists(job_script):
            qsub_out, qsub_err = shared.run_command(
                ['qsub', job_script],
                verbose=False
            )
            print qsub_out.rstrip()
        else:
            print 'Error creating job script for {0}'.format(filename)
            print stderr

    fh.close()
