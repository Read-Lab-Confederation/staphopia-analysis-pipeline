#! /usr/bin/env python
from ruffus import *

from staphopia.tasks import sccmec

parser = cmdline.get_argparse(description='WHAT DOES THIS PIPELINE DO?')
parser.add_argument("--blastdb", dest="blastdb", required=True,
                    help="BLAST database to query genes against.")
parser.add_argument('-p', '--processors', metavar="INT", type=int, default=1,
                  help='Number of processors to use. (Default 1)')
options = parser.parse_args()

config = {
    'n_cpu':str(options.processors),
    'primers':'/home/rpetit/staphopia/analysis-pipeline/tool-data/sccmec_primers.fasta',
    'proteins':'/home/rpetit/staphopia/analysis-pipeline/tool-data/sccmec_proteins.fasta',
}

blastdb_exists = options.blastdb + ".out"

# Pipeline --------------------------------------------------------------------
@mkdir('sccmec')   
@transform(blastdb_exists, regex(r"(.*)"), r"sccmec/completed.proteins")
def blast_genes(blastdb, output_file):
    results = sccmec.blast_genes(options.blastdb, output_file, config)

@follows(blast_genes)
@transform(blastdb_exists, regex(r"(.*)"), r"sccmec/completed.primers")
def blast_primers(blastdb, output_file):
    results = sccmec.blast_primers(options.blastdb, output_file, config)

# -----------------------------------------------------------------------------
pipeline_run(exceptions_terminate_immediately = True, verbose=5)