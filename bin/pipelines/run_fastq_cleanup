#! /usr/bin/env python
""" Clean up an input FASTQ file. """
from ruffus import *
from staphopia.tasks import fastq

parser = cmdline.get_argparse(description='Cleanup FASTQ files')
parser.add_argument("-f", "--fastq", dest="fastq", required=True,
                    help="Compressed FASTQ file (*.tar.gz)",)
options = parser.parse_args()

# Pipeline --------------------------------------------------------------------


@transform(options.fastq, regex(r"(.*).gz"), r"\1.stats")
def raw_stats(input_file, output_file):
    """ Calculate sequence stats of the input FASTQ. """
    fastq.stats(input_file, output_file)


@follows(raw_stats)
@transform(options.fastq, regex(r"(.*).fastq.gz"),
           r"\1.cleanup.fastq.gz", r"\1.fastq.stats")
def cleanup(input_file, output_file, stats_file):
    """ Clean up FASTQ based on statistics. """
    fastq.cleanup(input_file, stats_file, output_file)


@follows(cleanup)
@transform(cleanup, regex(r"(.*).gz"), r"\1.stats", r"\1.db")
def cleanup_stats(input_file, output_file, db_file):
    """ Calculate sequence stats of the cleaned up FASTQ. """
    fastq.stats(input_file, output_file)


# -----------------------------------------------------------------------------
pipeline_run(exceptions_terminate_immediately=True, verbose=5)
